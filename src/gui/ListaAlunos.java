package gui;

import dao.AlunoDAO;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.Aluno;

public class ListaAlunos extends javax.swing.JInternalFrame {
    
    public void salvarAluno(){
        
    };
    
    public ListaAlunos() {
        initComponents();
        habilitaBotoes(true);
        habilitarCampos(false); 
        setTitle("Lista de Alunos");
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnBotoes = new javax.swing.JPanel();
        jbAlterar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbFechar = new javax.swing.JButton();
        jpnFormulario = new javax.swing.JPanel();
        jtNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtDataNasc = new javax.swing.JFormattedTextField();
        jtCpf = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtPeso = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtAltura = new javax.swing.JTextField();
        jbCalcularIMC = new javax.swing.JButton();
        jpnConsulta = new javax.swing.JPanel();
        jlPesquisa = new javax.swing.JLabel();
        jtfPesquisa = new javax.swing.JTextField();
        jbConsultar = new javax.swing.JButton();

        jbAlterar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbSalvar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbFechar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jbFechar.setText("Fechar");
        jbFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnBotoesLayout = new javax.swing.GroupLayout(jpnBotoes);
        jpnBotoes.setLayout(jpnBotoesLayout);
        jpnBotoesLayout.setHorizontalGroup(
            jpnBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnBotoesLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jbAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                .addComponent(jbSalvar)
                .addGap(18, 18, 18)
                .addComponent(jbCancelar)
                .addGap(57, 57, 57)
                .addComponent(jbFechar)
                .addContainerGap())
        );
        jpnBotoesLayout.setVerticalGroup(
            jpnBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAlterar)
                    .addComponent(jbExcluir)
                    .addComponent(jbSalvar)
                    .addComponent(jbCancelar)
                    .addComponent(jbFechar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Data Nascimento:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("CPF:");

        jtDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        jtDataNasc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtDataNascActionPerformed(evt);
            }
        });

        jtCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCpfActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Peso:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Altura:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Nome:");

        jbCalcularIMC.setText("Calcular IMC");
        jbCalcularIMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCalcularIMCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnFormularioLayout = new javax.swing.GroupLayout(jpnFormulario);
        jpnFormulario.setLayout(jpnFormularioLayout);
        jpnFormularioLayout.setHorizontalGroup(
            jpnFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnFormularioLayout.createSequentialGroup()
                .addGroup(jpnFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnFormularioLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jpnFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jpnFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnFormularioLayout.createSequentialGroup()
                                .addComponent(jtPeso)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jtAltura, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpnFormularioLayout.createSequentialGroup()
                                .addComponent(jtCpf)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtNome)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnFormularioLayout.createSequentialGroup()
                        .addContainerGap(545, Short.MAX_VALUE)
                        .addComponent(jbCalcularIMC)))
                .addContainerGap())
        );
        jpnFormularioLayout.setVerticalGroup(
            jpnFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnFormularioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jtDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpnFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtAltura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbCalcularIMC)
                .addContainerGap())
        );

        jpnConsulta.setBackground(new java.awt.Color(0, 102, 102));

        jlPesquisa.setBackground(new java.awt.Color(255, 255, 255));
        jlPesquisa.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlPesquisa.setForeground(new java.awt.Color(255, 255, 255));
        jlPesquisa.setText("Pesquisar:");

        jbConsultar.setText("Consultar");
        jbConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnConsultaLayout = new javax.swing.GroupLayout(jpnConsulta);
        jpnConsulta.setLayout(jpnConsultaLayout);
        jpnConsultaLayout.setHorizontalGroup(
            jpnConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnConsultaLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jlPesquisa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbConsultar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpnConsultaLayout.setVerticalGroup(
            jpnConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnConsultaLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jpnConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlPesquisa)
                    .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbConsultar))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpnFormulario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpnConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpnBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpnFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jpnConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        // TODO add your handling code here:
        if (jtNome.getText().isEmpty() || jtDataNasc.getText().isEmpty() || jtPeso.getText().isEmpty() || jtAltura.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Certifique-se de que todos os campos abaixo estão preenchidos", "Erro", JOptionPane.ERROR_MESSAGE); 
        }else{
            habilitaBotoes(false);
            habilitarCampos(true);
            jtCpf.requestFocus();
        }
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFecharActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbFecharActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        // TODO add your handling code here:
        habilitaBotoes(true);
        habilitarCampos(false);
               
        try {
            AlunoDAO dao = new AlunoDAO();
            Aluno aluno = new Aluno(); 
            if (jtNome.getText().isEmpty() || jtDataNasc.getText().isEmpty() || jtPeso.getText().isEmpty() || jtAltura.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Todos os campos devem ser preenchidos", "Erro", JOptionPane.ERROR_MESSAGE);
                return; 
            }

            aluno.setAlu_nome(jtNome.getText());
            aluno.setAlu_cpf(Integer.parseInt(jtCpf.getText()));
            try {
                aluno.setAlu_nasc(LocalDate.parse(jtDataNasc.getText(), DateTimeFormatter.ofPattern("yyyy-MM-dd")));
            } catch (DateTimeParseException e) {
                JOptionPane.showMessageDialog(null, "Data de nascimento inválida. Use o formato yyyy-MM-dd", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                aluno.setAlu_peso(Float.parseFloat(jtPeso.getText()));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Peso inválido. Informe um valor numérico", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                aluno.setAlu_altura(Float.parseFloat(jtAltura.getText()));
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Altura inválida. Informe um valor numérico", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
            System.out.println("Atualizando aluno com CPF: " + aluno.getAlu_cpf());
            boolean atualiza = dao.atualizar(aluno);

            if (atualiza) {
                JOptionPane.showMessageDialog(null, "Aluno " + aluno.getAlu_nome() + " atualizado com sucesso", "Informação", JOptionPane.INFORMATION_MESSAGE);
                limparCampos();
            } else {
                JOptionPane.showMessageDialog(null, "Erro na atualização do aluno", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ListaAlunos.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Erro de banco de dados ao tentar atualizar", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        // TODO add your handling code here:
        habilitaBotoes(true);
        habilitarCampos(false);
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jtDataNascActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtDataNascActionPerformed

    }//GEN-LAST:event_jtDataNascActionPerformed

    private void jtCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCpfActionPerformed

    private void jbConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConsultarActionPerformed
        String aluCpfConsulta;
        aluCpfConsulta = jtfPesquisa.getText();
        AlunoDAO dao = new AlunoDAO();
        try {
            Aluno aluno = dao.consultar(aluCpfConsulta);
            if (aluno == null){
                    JOptionPane.showMessageDialog(null, "Erro CPF não localizado no sistema", "Erro", JOptionPane.ERROR_MESSAGE);
            }else{
                jtNome.setText(aluno.getAlu_nome());
                jtCpf.setText(String.valueOf(aluno.getAlu_cpf()));
                jtDataNasc.setText(aluno.getAlu_nasc().toString());
                jtPeso.setText(String.valueOf(aluno.getAlu_peso()));
                jtAltura.setText(String.valueOf(aluno.getAlu_altura()));
                jtfPesquisa.setText("");
            }
        } catch (SQLException ex) {
            Logger.getLogger(ListaAlunos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbConsultarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        String aluCpfDeletar = jtCpf.getText();
        try {
            AlunoDAO dao = new AlunoDAO();
            boolean deleta = dao.deletar(aluCpfDeletar);
            if(deleta == true){
                JOptionPane.showMessageDialog(null, "Aluno " + jtNome.getText() + " excluído com sucesso", "Informação", JOptionPane.INFORMATION_MESSAGE);
                limparCampos();
                jbExcluir.setEnabled(true);
            }else{
                JOptionPane.showMessageDialog(null, "Erro na exclusão do aluno", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ListaAlunos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbCalcularIMCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCalcularIMCActionPerformed
        try {
            if (jtNome.getText().isEmpty() || jtDataNasc.getText().isEmpty() || jtPeso.getText().isEmpty() || jtAltura.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Certifique-se de que todos os campos acima estão preenchidos", "Erro", JOptionPane.ERROR_MESSAGE); 
            }else{
                double altura = Double.parseDouble(jtAltura.getText());
                double peso = Double.parseDouble(jtPeso.getText());
                double imc = peso / (altura * altura);

                DecimalFormat df = new DecimalFormat("#.##");
                String imcFormatado = df.format(imc);
                LocalDate dataAtual = LocalDate.now();
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                String dataAtualFormatada = dataAtual.format(formatter);

                String resultadoIMC = null;
                if(imc < 18.5){
                    resultadoIMC = "Abaixo do peso"; 
                }else if(imc < 24.9 || imc> 18.5 ){
                    resultadoIMC = "Peso Normal";
                }else if(imc < 29.9 || imc > 25){
                    resultadoIMC = "Excesso de peso";
                }else if(imc < 34.9 || imc > 29.9){
                    resultadoIMC = "Obesidade";
                }else{
                    resultadoIMC = "Obasidade extrema";
                }

                String nomeArquivo = jtCpf.getText() + ".txt";
                
                FileWriter fw = new FileWriter(nomeArquivo, true); 
                try (BufferedWriter bw = new BufferedWriter(fw)) {
                    bw.write("Data de Registro: " + dataAtualFormatada + ", CPF: " + jtCpf.getText() + ", Nome: " + jtNome.getText() + ", Data de Nascimento: " + jtDataNasc.getText() + ", IMC: " + imcFormatado + ", Interpretação do Resultado: " + resultadoIMC);
                    bw.newLine();
                }
                JOptionPane.showMessageDialog(this, "Dados salvos com sucesso!");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, insira valores válidos para altura e peso.");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar os dados no arquivo.");
        }
    }//GEN-LAST:event_jbCalcularIMCActionPerformed
    
    //Metodo habilita botoes lista de alunos
    public void habilitaBotoes(boolean estado){
        jbAlterar.setEnabled(estado);
        jbExcluir.setEnabled(estado);
        jbSalvar.setEnabled(!estado);
        jbCancelar.setEnabled(!estado);
    } 

    //metodo habilita e desabilita campos lista alunos
    public void habilitarCampos(boolean estado){
        jtCpf.setEnabled(estado);
        jtAltura.setEnabled(estado);
        jtDataNasc.setEnabled(estado);
        jtNome.setEnabled(estado);
        jtPeso .setEnabled(estado);
    }
    
    public void limparCampos(){
        jtAltura.setText("");
        jtCpf.setText("");
        jtDataNasc.setText("");
        jtNome.setText("");
        jtPeso.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbCalcularIMC;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbConsultar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbFechar;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JLabel jlPesquisa;
    private javax.swing.JPanel jpnBotoes;
    private javax.swing.JPanel jpnConsulta;
    private javax.swing.JPanel jpnFormulario;
    public javax.swing.JTextField jtAltura;
    public javax.swing.JTextField jtCpf;
    public javax.swing.JFormattedTextField jtDataNasc;
    public javax.swing.JTextField jtNome;
    public javax.swing.JTextField jtPeso;
    private javax.swing.JTextField jtfPesquisa;
    // End of variables declaration//GEN-END:variables
}
